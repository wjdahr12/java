/*
1. 입력받은 값이 문자이면 "문자"라고 출력하고 그렇지 않으면 "기타"라고 출력
*/

import java.util.Scanner;

public class ControlTest { 
	// 문자 여부 확인 함수
	public static boolean isAllLetters(String str) {
        for (int i = 0; i < str.length(); i++) {
            if (!Character.isLetter(str.charAt(i))) {
                return false;
            }
        }
        return true;
    }
	
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("값을 입력하세요: ");
        String input = scanner.nextLine();
        
        if (isAllLetters(input)) {
            System.out.println("입력값은 문자입니다.");
        } else {
            System.out.println("입력값은 기타입니다.");
        }
        
        scanner.close();
    }
}

/*
2. 입력받은 값이 소문자이면 소문자라고 출력하고 대문자이면 대문자라고 출력하고
숫자이면 숫자라고 출력하고 그 외에는 기타라고 출력
*/

import java.util.Scanner;

public class IfTest {
	 public static boolean isLowerCase(String str) {
	        return str.matches("[a-z]+");
	    }
	 
	 public static boolean isUpperCase(String str) {
	        return str.matches("[A-Z]+");
	    }
	 
	 public static boolean isNumeric(String str) {
	        return str.matches("\\d+");
	    }

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		
		 System.out.print("값을 입력하세요: ");
	     String input = scanner.nextLine();
	     
	     if (isLowerCase(input)) {
	            System.out.println("입력값은 소문자입니다.");
	        } else if (isUpperCase(input)) {
	            System.out.println("입력값은 대문자입니다.");
	        } else if (isNumeric(input)) {
	            System.out.println("입력값은 숫자입니다.");
	        } else {
	            System.out.println("입력값은 기타입니다.");
	        }
	     
	     scanner.close();
	     

	}

}

/*
3. 간단한 전자계산기 (연산자에 q나 Q를 입력하면 종료)
연산자 : + 
숫자1 : 2
숫자2 : 4
결과 : 2 + 4 = 6
*/

import java.util.Scanner;

public class SimpleCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("연산자: ");
        char operator = scanner.next().charAt(0);

        System.out.print("숫자1: ");
        double number1 = scanner.nextDouble();

        System.out.print("숫자2: ");
        double number2 = scanner.nextDouble();

        double result = 0.0;

        switch (operator) {
            case '+':
                result = number1 + number2;
                break;
            default:
                System.out.println("잘못된 연산자입니다.");
                return;
        }

        System.out.println("결과: " + number1 + " " + operator + " " + number2 + " = " + result);

        scanner.close();
    }
}

/*
간단한 도움말 시스템을 만들자
1. if
2. switch
3. while
4. for
번호선택 : 1
if (조건식) 문장;

1. if
2. switch
3. while
4. for
번호선택 : 3
while (조건식) 문장;

...

번호선택 : 0을 누르면 종료
*/

    	do{
    		System.out.println("Help on:");
            System.out.println("1. if:");
            System.out.println("2. switch");
            System.out.println("3. while");
            System.out.println("4. for");
            System.out.println("5. do-while");
            System.out.println("choose one: ");

    		choice = (char)System.in.read();
//    		예외 선언 추가
    	} while(choice<'1' | choice>'5');
    	
    	System.out.println("\n");
//    	사용자 선택 후 하난 띄어서 출력
    	
    	switch(choice) {
    	case '1':
    		System.out.println("if 문법...");
    		break;
    	}

/* 
"." 입력이 될때까지 키보드 입력을 읽어서 입력된 공백의 갯수를 세고 그 합을 출력하시오.
*/

char ch;
    	int spaces = 0;
    	System.out.println("Enter a period to stop.");
    	do {
    		ch = (char) System.in.read();
    		if(ch==' ');
    		spaces++;
    	} while (ch != '.');
    	
    	System.out.println("공백의 갯수: "+ spaces);


1. 버블정렬 개선

public class BubbleSort {

	public static void main(String[] args) {
		// 버블 정렬 코드; 이진 검색
		int[] data = {
				2, 9, 10, 3, 7, 15, 5
		};
		int pass = 1;
		
		for (int i=0; i<data.length; i++) 
			System.out.println(data[i] + "\t");
//			\t-> 수평탭, 수평정렬;
			
			System.out.println("\n\n버블정렬 후...");
			
			for(int i=0; i<data.length-1; i++) {
				for(int j=0; j<data.length-pass; j++) {
					if(data[j] > data[j+1]) {
						int temp = data[j];
						data [j] = data[j+1];
						data [j+1] = temp;
					}
				}
				pass++;
			}
		
			for (int i =0; i<data.length; i++) {
				System.out.println(data[i] +"\t");
			}
	}

}

2. 선택 정렬 직접 코딩

3. 탑승객 파악

//		공항 셔틀의 탑승객의 수를 저장하는 프로그램 만들기
//		(셔틀이 주중에는 10회 운행하고, 주말에는 2번 운행함)
		int shuttle[][] = new int[7][];
		for(int i=0; i<5; i++) {
			shuttle[i] = new int[10];
		}
		
		shuttle[5] = new int[2];
		shuttle[6] = new int[2];
//		가짜 데이터 입력
		for(int i=0; i<5; i++) {
			for(int j=0; j<10; j++) {
				shuttle[i][j] = i + j + 10;
			}
		}
		
		for(int i=5; i<7; i++) {
			for(int j=0; j<2; j++) {
				shuttle[i][j] = i + j + 10;
			}
		}
        // 결과 출력
        for (int i = 0; i < 7; i++) {
            for (int j = 0; j < shuttle[i].length; j++) {
                System.out.print(shuttle[i][j] + "\t");
            }
            System.out.println();
        }

4.  // 메시지를 암호화한 값
		
    // 암호화된 메시지를 복호화

5. 1차원 배열을 이용한 성적표
   2차원 배열을 이용한 성적표
		// 총점 구하기
		
		// 평균 구하기
		
		// 학점 구하기
		
		// 등수 구하기 제대로 코드 짜기
		
		// 정렬 후 출력
